{
    "openapi": "3.0.0",
    "info": {
        "title": "Espace Show API Documentation",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/documentation",
            "description": "Espace Show API Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login to the application",
                "operationId": "login",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Access token",
                                            "type": "string"
                                        },
                                        "access_type": {
                                            "description": "Bearer token",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Unauthorized. Invalid credentials.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Unprocessable Entity. Validation error occurred.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Déconnexion de l'utilisateur",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "L'utilisateur s'est déconnecté avec succès"
                    },
                    "401": {
                        "description": "Non autorisé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Actualiser le jeton d'accès",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Le jeton d'accès a été actualisé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Nouveau jeton d'accès",
                                            "type": "string"
                                        },
                                        "access_type": {
                                            "description": "Type d'accès (Bearer)",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Durée de validité en secondes",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/allCountryAndPosition": {
            "get": {
                "tags": [
                    "PaysEtatsVilles"
                ],
                "summary": "Obtenir toutes les informations sur les pays et leurs positions",
                "operationId": "e05c563c1b12244e702f10df0654bc28",
                "responses": {
                    "200": {
                        "description": "Données des pays et de leurs positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "countries": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Nom du pays"
                                                            },
                                                            "position": {
                                                                "type": "string",
                                                                "example": "Position géographique"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Une erreur interne s'est produite"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getStateInCountry": {
            "post": {
                "tags": [
                    "PaysEtatsVilles"
                ],
                "summary": "Obtenir les départements/États d'un pays",
                "operationId": "ad083a379ad2604dcbc70851c0489b2b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "country": {
                                        "type": "string",
                                        "example": "Nom du pays"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Liste des départements/États du pays",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "states": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Nom de l'État"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Une erreur interne s'est produite"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getCityInState": {
            "post": {
                "tags": [
                    "PaysEtatsVilles"
                ],
                "summary": "Obtenir les villes d'un département/État d'un pays",
                "operationId": "9204a5bafa922ca0f05af82d94e3a749",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "country": {
                                        "type": "string",
                                        "example": "Nom du pays"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "Nom du département/État"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Liste des villes du département/État",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "cities": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Nom de la ville"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Une erreur interne s'est produite"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getCityInCountry": {
            "post": {
                "tags": [
                    "PaysEtatsVilles"
                ],
                "summary": "Obtenir les villes d'un pays",
                "operationId": "b08c047bcfe04df07d3faa87f84e38b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "country": {
                                        "type": "string",
                                        "example": "Nom du pays"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Liste des villes du pays",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "cities": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Nom de la ville"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Une erreur interne s'est produite"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/evenement": {
            "post": {
                "tags": [
                    "Événements"
                ],
                "summary": "Créer un nouvel événement avec des tickets",
                "operationId": "8bc8e31f765e1f5ab6e8742bc1ca5341",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "description": "Nom de l'événement",
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "pays": {
                                        "description": "Pays de l'événement",
                                        "type": "string"
                                    },
                                    "ville": {
                                        "description": "Ville de l'événement",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description de l'événement",
                                        "type": "string"
                                    },
                                    "date_debut": {
                                        "description": "Date de début de l'événement",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "date_fin": {
                                        "description": "Date de fin de l'événement",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "mots_cles": {
                                        "description": "Mots-clés de l'événement",
                                        "type": "string"
                                    },
                                    "type_ticket": {
                                        "type": "array",
                                        "items": {
                                            "description": "Type de ticket",
                                            "type": "string"
                                        }
                                    },
                                    "prix_ticket": {
                                        "type": "array",
                                        "items": {
                                            "description": "Prix de chaque ticket",
                                            "type": "number"
                                        }
                                    },
                                    "nombre_place_disponible": {
                                        "description": "Nombre de places disponibles",
                                        "type": "integer"
                                    },
                                    "type_evenement_id": {
                                        "description": "ID du type d'événement associé",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Événement enregistré avec succès"
                    },
                    "422": {
                        "description": "Erreurs de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Erreurs de validation": {
                                            "description": "Liste des erreurs de validation",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sendNotification/{content}": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Envoyer une notification",
                "description": "Envoyer une notification à l'utilisateur authentifié.",
                "operationId": "envoyerNotification",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "description": "Contenu de la notification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification envoyée avec succès"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "500": {
                        "description": "Erreur interne du serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/allNotifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Récupère toutes les notifications de l'utilisateur",
                "operationId": "d04ab7400668a6a3da6e1a07a77996ac",
                "responses": {
                    "200": {
                        "description": "Liste des notifications"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/unreadNotifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Récupère toutes les notifications non lues de l'utilisateur",
                "operationId": "485a722ba6b2eb7bfb0024319b76f739",
                "responses": {
                    "200": {
                        "description": "Liste des notifications non lues"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/markAsRead/{id}": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Marque une notification comme lue",
                "operationId": "e207e98f477b1dfb1003294bcb1b9622",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la notification à marquer comme lue",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marquée comme lue avec succès"
                    },
                    "404": {
                        "description": "Notification non trouvée"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/enableNotification": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Activer les notifications",
                "description": "Activer les notifications pour l'utilisateur authentifié.",
                "operationId": "activerNotifications",
                "responses": {
                    "200": {
                        "description": "Notifications activées"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "500": {
                        "description": "Erreur interne du serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/disabledNotification": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Désactiver les notifications",
                "description": "Désactiver les notifications pour l'utilisateur authentifié.",
                "operationId": "desactiverNotifications",
                "responses": {
                    "200": {
                        "description": "Notifications désactivées"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "500": {
                        "description": "Erreur interne du serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get_changePasswordCode_byMail": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir le code de changement de mot de passe par e-mail",
                "description": "Génère un code OTP (mot de passe à usage unique) et l'envoie à l'adresse e-mail de l'utilisateur dans le but de changer le mot de passe.",
                "operationId": "getChangePasswordCodeByMail",
                "requestBody": {
                    "description": "Adresse e-mail de l'utilisateur",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "utilisateur@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code OTP envoyé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Code OTP envoyé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ressource introuvable"
                    }
                }
            }
        },
        "/api/confirm_forgotPasswordCode_byMail": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Confirmer le code de réinitialisation de mot de passe par e-mail",
                "description": "Confirme le code OTP (mot de passe à usage unique) envoyé par e-mail pour réinitialiser le mot de passe de l'utilisateur.",
                "operationId": "confirmForgotPasswordCodeByMail",
                "requestBody": {
                    "description": "Token de confirmation reçu par e-mail",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "votre_token_otp"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirmation réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "identifier": {
                                            "type": "string",
                                            "example": "identifiant_de_l_utilisateur"
                                        },
                                        "otpVerify": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ressource non trouvée"
                    }
                }
            }
        },
        "/api/change_password/{identifier}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Changer le mot de passe de l'utilisateur",
                "description": "Change le mot de passe de l'utilisateur en fournissant le nouveau mot de passe.",
                "operationId": "changePasswordByMail",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifiant de l'utilisateur",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Nouveau mot de passe",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "maxLength": 25,
                                        "minLength": 8,
                                        "example": "nouveau_mot_de_passe"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "maxLength": 25,
                                        "minLength": 8,
                                        "example": "nouveau_mot_de_passe_confirmation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mot de passe modifié avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mot de passe modifié avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation"
                    },
                    "404": {
                        "description": "Ressource non trouvée"
                    }
                }
            }
        },
        "/api/allRoles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Liste des rôles",
                "description": "Liste des rôles\n\nRécupère la liste de tous les rôles.",
                "operationId": "68f4642092831f82df96f44dd0b771eb",
                "responses": {
                    "200": {
                        "description": "Liste des rôles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/selectRole": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sélectionner un rôle avant l'inscription",
                "description": "Permet à un utilisateur de sélectionner un rôle en fournissant un identifiant de rôle valide.",
                "operationId": "196844b114b95dc855362716cb392aac",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role_id"
                                ],
                                "properties": {
                                    "role_id": {
                                        "description": "Identifiant du rôle choisi par l'utilisateur.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rôle choisi avec succès.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Token temporaire associé au rôle choisi.",
                                    "type": "string"
                                },
                                "example": "temporary_token_value"
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Description de l'erreur de validation.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Enregistrement de l'utilisateur avec vérification temporaire",
                "description": "Enregistrement de l'utilisateur avec vérification temporaire.\n\nCette route permet à un utilisateur de s'inscrire et de lier son rôle\nvia un token temporaire. Elle génère également un code OTP et l'envoie à l'utilisateur.",
                "operationId": "872725de3f20bddf07c2848a82e46b80",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "description": "Nom de l'utilisateur",
                                        "type": "string"
                                    },
                                    "prenom": {
                                        "description": "Prénom de l'utilisateur",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Adresse e-mail de l'utilisateur",
                                        "type": "string"
                                    },
                                    "telephone": {
                                        "description": "Numéro de téléphone de l'utilisateur",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Mot de passe de l'utilisateur (doit être confirmé)",
                                        "type": "string"
                                    },
                                    "temporary_token": {
                                        "description": "Token temporaire de vérification",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Utilisateur enregistré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur enregistré avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreurs de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Échec de la validation des données"
                                        },
                                        "errors": {
                                            "description": "Liste des erreurs de validation",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/generateOtp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Générer un code OTP et l'envoyer à l'utilisateur",
                "description": "Générer un code OTP et l'envoyer à l'utilisateur.\n\nCette route génère un code OTP (One Time Password) et l'envoie à l'utilisateur\npar e-mail, SMS ou tout autre moyen de communication.",
                "operationId": "ebeeb864c0dcb2188eff7d0f21e1a2c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "identifier": {
                                        "description": "Identifiant de l'utilisateur",
                                        "type": "string"
                                    },
                                    "mail": {
                                        "description": "Adresse e-mail de l'utilisateur",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code OTP généré et envoyé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Code OTP généré et envoyé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/confirmAccount": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirmer un compte utilisateur avec un code OTP",
                "description": "Confirmez un compte utilisateur en vérifiant un code OTP avec l'identifiant associé.",
                "operationId": "a6f8ae9bd4a6f6fee0ff1e87d5823beb",
                "requestBody": {
                    "description": "Les données nécessaires pour confirmer le compte utilisateur",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Le code OTP à vérifier.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Validation réussie du code OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Indique si la validation du code OTP a réussi.",
                                    "type": "boolean"
                                },
                                "example": true
                            }
                        }
                    },
                    "400": {
                        "description": "Échec de validation du code OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Indique si la validation du code OTP a échoué.",
                                    "type": "boolean"
                                },
                                "example": false
                            }
                        }
                    }
                }
            }
        },
        "/api/subscriber": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Subscribe to the newsletter",
                "operationId": "subscribeToNewsletter",
                "requestBody": {
                    "description": "Subscription request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address of the subscriber",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriber/verify/{token}/{email}": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Verify subscriber by token and email",
                "operationId": "verifySubscriber",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Verification token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Subscriber's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscriber verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Verification successful message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscriber not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Subscriber not found message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/type": {
            "post": {
                "tags": [
                    "Événements"
                ],
                "summary": "Créer un nouveau type d'événement",
                "operationId": "7457d24253968ec6b3981a9220888c04",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "description": "Nom du type d'événement",
                                        "type": "string",
                                        "maxLength": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type d'événement enregistré avec succès"
                    },
                    "422": {
                        "description": "Erreurs de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Erreurs de validation": {
                                            "description": "Liste des erreurs de validation",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/editProfil/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Modifier les informations utilisateur",
                "description": "Afficher les informations du profil de la ressource utilisateur spécifiée.",
                "operationId": "editUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de l'utilisateur",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informations du profil de l'utilisateur"
                    },
                    "404": {
                        "description": "Ressource non trouvée"
                    }
                }
            }
        },
        "/api/updateProfil/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Mettre à jour les informations de l'utilisateur",
                "description": "Mettez à jour la ressource utilisateur spécifiée dans le stockage.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de l'utilisateur",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Données de l'utilisateur à mettre à jour",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "prenom": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Utilisateur mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Modification effectuée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ressource non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "La donnée ciblée n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Entité non traitable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Entité non traitable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/change-password/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change user's password",
                "description": "Change the user's password by providing the old and new password.",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Password change data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "old_password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new_password"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new_password_confirmation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les données de validation ont échoué."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ancien mot de passe incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Role": {
                "title": "Role",
                "description": "Modèle de données pour un rôle",
                "properties": {
                    "id": {
                        "description": "ID du rôle",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Nom du rôle",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApiCode": {
                "title": "Api Codes",
                "description": "Descriptions for API error codes",
                "properties": {
                    "SOMETHING_WENT_WRONG": {
                        "description": "250: Something went wrong.",
                        "type": "integer"
                    },
                    "INVALID_CREDENTIALS": {
                        "description": "251: Invalid credentials.",
                        "type": "integer"
                    },
                    "VALIDATION_ERROR": {
                        "description": "252: Validation error.",
                        "type": "integer"
                    },
                    "EMAIL_ALREADY_VERIFIED": {
                        "description": "253: Email already verified.",
                        "type": "integer"
                    },
                    "INVALID_EMAIL_VERIFICATION_URL": {
                        "description": "254: Invalid email verification URL.",
                        "type": "integer"
                    },
                    "INVALID_RESET_PASSWORD_TOKEN": {
                        "description": "255: Invalid reset password token.",
                        "type": "integer"
                    },
                    "ACCOUNT_NOT_VERIFIED": {
                        "description": "256: Account not verified.",
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    }
}